<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vscode的C++环境配置及使用(MSVC)</title>
    <link href="/2024/08/01/Guide/2024-08-01/"/>
    <url>/2024/08/01/Guide/2024-08-01/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h1 id="下载及安装"><a href="#下载及安装" class="headerlink" title="下载及安装"></a>下载及安装</h1><p>官方下载链接：<a href="https://code.visualstudio.com/Download">https://code.visualstudio.com/Download</a></p><p>选择这个安装程序可以为所有用户安装，其实哪个都无所谓，只是装的时候看到提示了就看了看。</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_09-58-26.png"></p><p>安装就不说了，有手就行。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>我电脑是<strong>windows</strong>系统，已经装了<strong>Visual Studio 2022</strong>，所以对C++环境配置的时候打算直接用<strong>MSVC</strong>的编译器，不再安装其它的C++编译器，后面重点说一下配置MSVC编译器遇到的坑。</p><h2 id="Visual-Studio-Installer部署"><a href="#Visual-Studio-Installer部署" class="headerlink" title="Visual Studio Installer部署"></a>Visual Studio Installer部署</h2><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_10-21-51.png"></p><h2 id="VS-Code插件部署"><a href="#VS-Code插件部署" class="headerlink" title="VS Code插件部署"></a>VS Code插件部署</h2><p>在扩展栏搜索C++，安装如图所示的扩展，推荐可以再装一些比较流行的C++扩展：C&#x2F;C++ Extension Pack（官方出品，必属精品）、C&#x2F;C++ Snippets（可以快捷键入常用的代码片段）</p><p>我喜欢学英语，所以没装中文扩展，需要的可以搜索安装，这样就可以实现汉化VS Code。</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_10-30-20.png"></p><h1 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h1><p>准备完成后就可以开始正式对C++开发插件进行一些配置了，网上的教程五花八门不够专业，比如各种各样的json配置直接贴文本给你，也不讲清楚为什么，让人不明所以，于是自己尝试根据官网教程整理了一下思路，官方教程明明讲的很清楚详细了，不知道为什么没什么人看。。。</p><p>插件的首页就可以看到有教程，显然我只需要看<a href="https://code.visualstudio.com/docs/cpp/config-msvc">Microsoft C++ compiler (MSVC) on Windows</a>这个链接，本文只对关键部分做阐述</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_10-43-19.png"></p><p>首先创建一个工作文件夹了，我手动创建了一个，然后控制台里面导航到工作文件夹路径，输入code .即可在vscode中打开该工作区</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_10-49-48.png"></p><p>打开提示你是否信任该文件夹的作者，那肯定是选Yes了</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_10-52-48.png"></p><p>左侧在文件夹中新建一个cpp文件，开始测试C++开发环境</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_10-56-04.png"></p><p>粘贴这段代码到你的CPP文件中做运行测试，也可以是任意的代码，这是从官方教程复制来的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    vector&lt;string&gt; msg &#123;<span class="hljs-string">&quot;Hello&quot;</span>, <span class="hljs-string">&quot;C++&quot;</span>, <span class="hljs-string">&quot;World&quot;</span>, <span class="hljs-string">&quot;from&quot;</span>, <span class="hljs-string">&quot;VS Code&quot;</span>, <span class="hljs-string">&quot;and the C++ extension!&quot;</span>&#125;;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">const</span> string&amp; word : msg)<br>    &#123;<br>        cout &lt;&lt; word &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>    &#125;<br>    cout &lt;&lt; endl;<br>&#125;<br></code></pre></td></tr></table></figure><p>选择右上角的三角图标尝试运行</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_11-01-04.png"></p><p>第一次编译运行的时候会提示你选择编译器，这时候就遇到了配置MSVC的第一坑，需要从VS的控制台启动vscode，这样vscode才有完整的环境信息，这时候保存好文件，关掉窗口，找到这个工具，启动后导航至工作文件夹，然后再输入code .启动vscode</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_11-04-45.png"></p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_11-06-31.png"></p><p>再次点击运行，然后在上方窗口选择检测到msvc的cl.exe，选择完后就开始编译运行了,可以在下方控制台看到打印的信息。</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_11-09-00.png"></p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_11-12-29.png"></p><p>然后可以看到做左侧窗口多了一个.vscode的文件夹，里面自动生成了tasks.json文件，这个文件是负责构建任务的，暂时不需要改，保持默认内容即可。</p><p>另外可以注意到代码中对一些标准库头文件的包含是有下划线的警告，表示找不到路径，这是因为C++插件中的IntelliSense没有识别到msvc编译器路径，从而无法得到这些标准库的路径，现在手动配置一下，快捷键Ctrl+Shift+P打开命令面板，找到如图所示选项，选中后会自动创建一个c_cpp_properties.json文件，这个主要是IntelliSense的配置，如果不配置好编译器路径，智能感知就无法生效，写代码的时候就很难受，没有提示。</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_11-24-23.png"></p><p>这里我手动修改了编译器路径为我电脑上安装的路径，其他人需要根据自己实际安装位置进行调整。</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_11-29-10.png"></p><p>配置完后可以发现之前找不到标准库头文件的警告消除了，代码智能感知也工作正常。</p><p><img src="https://myblog-images-1254145985.cos.ap-guangzhou.myqcloud.com/myblog-images/Snipaste_2024-08-01_11-30-49.png"></p><p>最后一步，完成调试的配置，点击前面编译运行的三角图标边上的齿轮，就会自动创建一个launch.json（调试配置），暂不需要改动，然后直接点三角图标中的Debug即可正常调试。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>务必使用vs的控制台窗口打开vscode，这样才能正确找到msvc所有开发所需环境路径，否则会有很多错误。</li><li>觉得每次需要从vs的控制台窗口启动vscode很麻烦，找了很多办法，比如手动在系统环境变量添加各种PATH和LIB路径，但最后都是运行不起来，始终会提示需要从vs的控制台窗口启动vscode，即使用了官方教程里的方法，修改task.json里面的配置也是不行，目前没找到解决方法。</li><li>网上的教程五花八门也讲不清原理，就各种东西给你直接复制粘贴到各个json文件里面，也不讲清楚，我最不喜欢不明所以的学东西了，其实跟着官方教程一下子就理清了，每个地方都介绍的很清楚，一下子就配置好了。</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>环境配置, 工具使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>扬帆——起航</title>
    <link href="/2024/07/25/Chat/2024-07-25/"/>
    <url>/2024/07/25/Chat/2024-07-25/</url>
    
    <content type="html"><![CDATA[<h1 id="扬帆——起航"><a href="#扬帆——起航" class="headerlink" title="扬帆——起航"></a>扬帆——起航</h1><h2 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h2><p>记录一下自己的学习历程吧。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
